{"version":3,"sources":["components/TodoForm.module.css","actions/listsActions.js","actions/index.js","actions/cardsActions.js","components/TrelloCard.js","components/TrelloActionButton.js","components/TrelloForm.js","components/EditListButton.js","components/TrelloList.js","components/TinyFooter.js","components/ArchiveCard.js","components/Archive.js","components/App.js","serviceWorker.js","reducers/ListReducer.js","reducers/index.js","store/index.js","index.js"],"names":["module","exports","addList","title","type","CONSTANTS","ADD_LIST","payload","editList","listId","EDIT_LIST","ADD_CARD","EDIT_CARD","DELETE_CARD","TOGGLE_CARD","DRAG_HAPPENED","addCard","text","deleteCard","cardId","Container","styled","div","props","isDragging","connect","id","index","completed","isTiny","isTask","isGoal","useState","editing","setEditing","todo","setTodo","hover","setHover","handleDelete","dispatch","toggleComplete","toggleForm","handleHover","handleHoverLeave","handleSubmit","e","preventDefault","editCard","handleInputChange","target","value","handleFocus","select","style","marginBottom","backgroundColor","autoFocus","onFocus","onBlur","onChange","resize","width","overflow","outline","border","fontSize","padding","display","justifyContent","IconButton","onClick","renderForm","draggableId","String","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","onMouseEnter","onMouseLeave","CardContent","Typography","gutterBottom","opacity","textDecoration","transition","onMouseOver","onMouseOut","boxShadow","TrelloActionButton","state","formOpen","openForm","setState","closeForm","handleAddList","handleAddCard","listID","list","placeholder","marginTop","flexDirection","alignItems","onSubmit","className","classes","Button","renderAddButton","buttonText","this","React","Component","color","ListContainer","List","isDraggingOver","InnerList","nextProps","cards","map","card","key","setText","toggleEditing","handleEditList","trim","minHeight","editable","height","fontWeight","marginLeft","cursor","undefined","renderTitle","TrelloForm","droppableId","droppableProps","Footer","TinyFooter","exact","to","activeClassName","styles","activeLink","Archive","Title","marginRight","emoji","transform","lists","useEffect","window","localStorage","setItem","JSON","stringify","onDragEnd","result","destination","source","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","sort","Routes","withRouter","location","TransitionGroup","CSSTransition","pathname","classNames","timeout","path","render","direction","length","Boolean","hostname","match","initialState","uuid","listReducer","parse","getItem","action","newList","newState","newCard","forEach","archive","find","i","j","c","filter","push","splice","listStart","listEnd","combineReducers","store","createStore","rootReducer","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0accd88f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Archive\":\"TodoForm_Archive__HSHhq\",\"Title\":\"TodoForm_Title__3NJMU\",\"title\":\"TodoForm_title__1ROYc\",\"activeLink\":\"TodoForm_activeLink__SPnNi\"};","import { CONSTANTS } from '../actions';\n\nexport const addList = (title) => {\n    return {\n        type: CONSTANTS.ADD_LIST,\n        payload: title,\n    };\n};\n\nexport const editList = (title, listId) => {\n    return {\n        type: CONSTANTS.EDIT_LIST,\n        payload: { title, listId },\n    };\n};\n","export * from './listsActions';\n\nexport const CONSTANTS = {\n    ADD_CARD: \"ADD_CARD\",\n    EDIT_CARD: \"EDIT_CARD\",\n    DELETE_CARD: \"DELETE_CARD\",\n    TOGGLE_CARD: \"TOGGLE_CARD\",\n    ADD_LIST: \"ADD_LIST\",\n    EDIT_LIST: \"EDIT_LIST\",\n    DRAG_HAPPENED: \"DRAG_HAPPENED\",\n};","import { CONSTANTS } from '../actions';\n\nexport const addCard = (listId, text) => {\n    return {\n        type: CONSTANTS.ADD_CARD,\n        payload: { text, listId },\n    };\n};\n\nexport const editCard = (cardId, text) => {\n    return {\n        type: CONSTANTS.EDIT_CARD,\n        payload: { text, cardId },\n    };\n};\n\nexport const deleteCard = (cardId) => {\n    return {\n        type: CONSTANTS.DELETE_CARD,\n        payload: { cardId },\n    };\n};\n\nexport const toggleCard = (cardId) => {\n    return {\n        type: CONSTANTS.TOGGLE_CARD,\n        payload: { cardId },\n    };\n};\n\nexport const sort = (droppableIdStart, droppableIdEnd, droppableIndexStart, droppableIndexEnd, draggableId, type) => {\n    return {\n        type: CONSTANTS.DRAG_HAPPENED,\n        payload: {\n            droppableIdStart,\n            droppableIdEnd,\n            droppableIndexStart,\n            droppableIndexEnd,\n            draggableId,\n            type,\n        },\n    };\n};\n","import React, { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport DoneOutlineOutlinedIcon from '@material-ui/icons/DoneOutlineOutlined';\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport { Draggable } from 'react-beautiful-dnd';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { deleteCard, toggleCard, editCard } from '../actions/cardsActions';\nimport TextArea from 'react-textarea-autosize';\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\n\nconst Container = styled.div`\n  background-color: ${(props) => (props.isDragging ? '#89b7b7' : '#fffefb')};\n  margin-bottom: 8px;\n  border-radius: 5px;\n  box-shadow: ${(props) => (props.isDragging ? '0px 5px 5px rgba(0,0,0,0.3)' : 'none')};\n  word-wrap: break-word;\n`;\n\nconst TrelloCard = (props) => {\n  const { text, id, index, completed, isTiny, isTask, isGoal } = props;\n  const [editing, setEditing] = useState(false);\n  const [todo, setTodo] = useState(text);\n  const [hover, setHover] = useState(false);\n\n  const handleDelete = () => {\n    const { dispatch, id } = props;\n    dispatch(deleteCard(id));\n  };\n\n  const toggleComplete = () => {\n    const { dispatch, id } = props;\n    dispatch(toggleCard(id));\n  };\n\n  const toggleForm = () => {\n    setEditing(!editing);\n  };\n\n  const handleHover = () => {\n    setHover(true);\n  };\n\n  const handleHoverLeave = () => {\n    setHover(false);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const { dispatch, id } = props;\n    dispatch(editCard(id, todo));\n\n    toggleForm();\n  };\n\n  const handleInputChange = (e) => {\n    setTodo(e.target.value);\n  };\n\n  const renderTinyCard = () => {\n    return (\n      <div\n        onMouseEnter={handleHover}\n        onMouseLeave={handleHoverLeave}\n        onClick={toggleComplete}\n        style={{ marginBottom: '20px' }}\n      >\n        <CardContent style={{ marginBottom: '-20px' }}>\n          <Typography\n            gutterBottom\n            style={{\n              opacity: completed && '0.2',\n              textDecoration: completed && 'line-through',\n              transition: 'all 0.2s',\n            }}\n          >\n            {text}\n          </Typography>\n        </CardContent>\n        <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n          <IconButton onClick={handleDelete} style={{ transition: 'opacity 0.2s', opacity: hover ? 1 : 0 }}>\n            <DeleteOutlineOutlinedIcon />\n          </IconButton>\n        </div>\n      </div>\n    );\n  };\n  const renderGoalCard = () => {\n    return (\n      <div\n        onMouseOver={handleHover}\n        onMouseOut={handleHoverLeave}\n        style={{\n          backgroundColor: '#efeeee',\n          boxShadow: 'inset -6px -6px 16px rgba(255, 255, 255, 0.5), inset 6px 6px 16px rgba(209, 205, 199, 0.5)',\n          marginBottom: '20px',\n        }}\n      >\n        <CardContent style={{ marginBottom: '-20px' }}>\n          <Typography\n            gutterBottom\n            style={{\n              opacity: completed && '0.2',\n              textDecoration: completed && 'line-through',\n              transition: 'all 0.2s',\n            }}\n          >\n            {text}\n          </Typography>\n        </CardContent>\n\n        <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n          <IconButton onClick={toggleForm} style={{ transition: 'opacity 0.2s', opacity: hover ? 1 : 0 }}>\n            <EditOutlinedIcon />\n          </IconButton>\n          <IconButton onClick={handleDelete} style={{ transition: 'opacity 0.2s', opacity: hover ? 1 : 0 }}>\n            <DeleteOutlineOutlinedIcon />\n          </IconButton>\n        </div>\n      </div>\n    );\n  };\n  const renderCard = () => {\n    return (\n      <div\n        onMouseOver={handleHover}\n        onMouseOut={handleHoverLeave}\n        style={{\n          boxShadow: 'rgba(255, 255, 255, 0.5) -6px -6px 16px, rgba(209, 205, 199, 0.5) 6px 6px 16px',\n          // boxShadow: 'rgba(0,0,0,0.1) 0 4px 4px',\n          marginBottom: '20px',\n        }}\n      >\n        <CardContent style={{ marginBottom: '-20px' }}>\n          <Typography\n            gutterBottom\n            style={{\n              opacity: completed && '0.2',\n              textDecoration: completed && 'line-through',\n              transition: 'all 0.2s',\n            }}\n          >\n            {text}\n          </Typography>\n        </CardContent>\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <IconButton onClick={toggleComplete}>\n            <DoneOutlineOutlinedIcon />\n          </IconButton>\n          <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <IconButton onClick={toggleForm} style={{ transition: 'opacity 0.2s', opacity: hover ? 1 : 0 }}>\n              <EditOutlinedIcon />\n            </IconButton>\n            <IconButton onClick={handleDelete} style={{ transition: 'opacity 0.2s', opacity: hover ? 1 : 0 }}>\n              <DeleteOutlineOutlinedIcon />\n            </IconButton>\n          </div>\n        </div>\n      </div>\n    );\n  };\n  const renderCustomizedCard = () => {\n    return (\n      <div\n        onMouseOver={handleHover}\n        onMouseOut={handleHoverLeave}\n        style={{\n          boxShadow: 'rgba(255, 255, 255, 0.5) -6px -6px 16px, rgba(209, 205, 199, 0.5) 6px 6px 16px',\n          // boxShadow: 'rgba(0,0,0,0.1) 0 4px 4px',\n          marginBottom: '20px',\n        }}\n      >\n        <CardContent style={{ marginBottom: '-20px' }}>\n          <Typography\n            gutterBottom\n            style={{\n              opacity: completed && '0.2',\n              textDecoration: completed && 'line-through',\n              transition: 'all 0.2s',\n            }}\n          >\n            {text}\n          </Typography>\n        </CardContent>\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <IconButton onClick={toggleComplete} style={{ transition: 'opacity 0.2s', opacity: hover ? 1 : 0 }}>\n            <DoneOutlineOutlinedIcon />\n          </IconButton>\n          <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <IconButton onClick={toggleForm} style={{ transition: 'opacity 0.2s', opacity: hover ? 1 : 0 }}>\n              <EditOutlinedIcon />\n            </IconButton>\n            <IconButton onClick={handleDelete} style={{ transition: 'opacity 0.2s', opacity: hover ? 1 : 0 }}>\n              <DeleteOutlineOutlinedIcon />\n            </IconButton>\n          </div>\n        </div>\n      </div>\n    );\n  };\n  const handleFocus = (e) => {\n    e.target.select();\n  };\n\n  const renderForm = () => {\n    return (\n      <div style={{ marginBottom: '20px', backgroundColor: isGoal && '#efeeee' }}>\n        <form>\n          <TextArea\n            autoFocus\n            onFocus={handleFocus}\n            onBlur={handleSubmit}\n            value={todo}\n            onChange={handleInputChange}\n            style={{\n              resize: 'none',\n              width: '100%',\n              overflow: 'hidden',\n              outline: 'none',\n              border: 'none',\n              fontSize: 'inherit',\n              padding: '16px',\n              fontSize: '1rem',\n              lineHeight: '1.5',\n              letterSpacing: '0.00938em',\n              marginBottom: '-15px',\n              backgroundColor: isGoal && '#efeeee',\n            }}\n          />\n        </form>\n        <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n          <IconButton onClick={handleSubmit} style={{}}>\n            <SaveOutlinedIcon />\n          </IconButton>\n          <IconButton onClick={toggleForm}>\n            <CancelOutlinedIcon />\n          </IconButton>\n        </div>\n      </div>\n    );\n  };\n  return editing ? (\n    renderForm()\n  ) : (\n    <Draggable draggableId={String(id)} index={index}>\n      {(provided, snapshot) => (\n        <Container\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          isDragging={snapshot.isDragging}\n          // style={{opacity: completed && '0.4'}}\n        >\n          {isTiny ? renderTinyCard() : isGoal ? renderGoalCard() : isTask? renderCard() : renderCustomizedCard()}\n        </Container>\n      )}\n    </Draggable>\n  );\n};\n\nconst styles = {\n  cardContainer: {\n    marginBottom: 8,\n  },\n};\n\nexport default connect()(TrelloCard);\n","import React from 'react';\nimport Icon from '@material-ui/core/Icon';\nimport { Button, Card, IconButton } from '@material-ui/core';\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined'\nimport TextArea from 'react-textarea-autosize';\nimport { connect } from 'react-redux';\nimport { addList } from '../actions';\nimport { addCard } from '../actions/cardsActions';\nimport classes from './TodoForm.module.css';\n\nclass TrelloActionButton extends React.Component {\n    state = { formOpen: false, text: '', hover: false };\n\n    openForm = () => {\n        this.setState({ formOpen: true });\n    };\n\n    closeForm = () => {\n        this.setState({ formOpen: false });\n    };\n\n    handleInputChange = (e) => {\n        this.setState({ text: e.target.value });\n    };\n\n    handleAddList = () => {\n        const { dispatch } = this.props;\n        const { text } = this.state;\n        if (text) {\n            dispatch(addList(text));\n        }\n        this.setState({ text: '' });\n    };\n\n    handleAddCard = () => {\n        const { dispatch, listID } = this.props;\n        const { text } = this.state;\n        if (text) {\n            dispatch(addCard(listID, text));\n        }\n        this.setState({ text: '' });\n    };\n\n    renderForm = () => {\n        const { list } = this.props;\n        const placeholder = list ? 'Enter list title...' : 'Enter a title for this card...';\n        const buttonTitle = list ? 'Add List' : 'Add Card';\n        return (\n            <div style={{ width:'22%', marginTop: '5rem', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n                <form onSubmit={this.handleAddList}>\n                    <input\n                        placeholder={placeholder}\n                        type=\"text\"\n                        autoFocus\n                        onBlur={this.closeForm}\n                        value={this.state.text}\n                        onChange={this.handleInputChange}\n                        style={{\n                            resize: 'none',\n                            width: '100%',\n                            overflow: 'hidden',\n                            outline: 'none',\n                            border: 'none',\n                        }}\n                    />\n                    <button className={classes.Button}>\n                        Add\n                    </button>\n                </form>\n                \n            </div>\n        );\n    };\n\n    renderAddButton = () => {\n        const { list } = this.props;\n        const buttonText = list ? 'Add your list' : 'Add another card';\n        return (\n            <div style={{ width:'22%', marginTop: '5rem', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n                <Button onClick={this.openForm} style={{ padding: '10px 40px' }}>\n                    {buttonText}\n                </Button>\n            </div>\n        );\n    };\n    render() {\n        return this.state.formOpen ? this.renderForm() : this.renderAddButton();\n    }\n}\n\nconst styles = {\n    openForButtonGroup: {\n        display: 'flex',\n        alignItems: 'center',\n        cursor: 'pointer',\n        borderRadius: 3,\n        height: 36,\n        width: 272,\n        paddingLeft: 10,\n    },\n    formButtonGroup: {\n        marginTop: 8,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    addListButton: {\n        display: 'flex',\n        alignItems: 'center',\n        cursor: 'pointer',\n        borderRadius: 3,\n        height: 36,\n        width: 272,\n        paddingLeft: 10,\n        color: '#909090',\n        backgroundColor: '#efeeee',\n        marginTop: '5.5rem',\n        justifyContent: 'center',\n        '&:hover': {\n            backgroundColor: '#eeeeee',\n        },\n        transition: 'all 0.2s',\n    },\n};\n\nexport default connect()(TrelloActionButton);\n","import React from 'react';\nimport Icon from '@material-ui/core/Icon';\nimport { Button, Card } from '@material-ui/core';\nimport TextArea from 'react-textarea-autosize';\nimport { connect } from 'react-redux';\nimport { addList } from '../actions';\nimport { addCard } from '../actions/cardsActions';\nimport classes from './TodoForm.module.css';\n\nclass TrelloActionButton extends React.Component {\n    state = { formOpen: false, text: ''};\n\n    openForm = () => {\n        this.setState({ formOpen: true });\n    };\n\n    closeForm = () => {\n        this.setState({ formOpen: false });\n    };\n\n    handleInputChange = (e) => {\n        this.setState({ text: e.target.value });\n    };\n\n    handleAddCard = () => {\n        const { dispatch, listID } = this.props;\n        const { text } = this.state;\n        if (text) {\n            dispatch(addCard(listID, text));\n        }\n        this.setState({ text: '' });\n    };\n\n    render() {\n        const placeholder = 'Add new card...'\n        return (\n            <form onSubmit={this.handleAddCard}>\n                <input\n                    placeholder={placeholder}\n                    onBlur={this.closeForm}\n                    value={this.state.text}\n                    onChange={this.handleInputChange}\n                    style={{\n                        resize: 'none',\n                        width: '100%',\n                        overflow: 'hidden',\n                        outline: 'none',\n                        border: 'none',\n                    }}\n                />\n                <Button onClick={this.handleAddCard} style={{padding:'13px 40px', color:'#606060'}}>Add</Button>\n            </form>\n        );\n    }\n}\n\nexport default connect()(TrelloActionButton);\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { editList } from '../actions';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport { Component } from 'react';\n\nexport default class EditListButton extends Component {\n    state = { formOpen: false, text: '' };\n    handleEditList = () => {\n        const { dispatch, listID } = this.props;\n        const { text } = this.state;\n        if (text) {\n            dispatch(editList(text, listID));\n        }\n        this.setState({ text: '' });\n    };\n    handleInputChange = (e) => {\n        this.setState({ text: e.target.value });\n    };\n    render() {\n        return <EditOutlinedIcon style={{color:'#606060'}}/>;\n    }\n}\n","import React, { Component, useState } from 'react';\nimport { connect } from 'react-redux';\nimport TrelloCard from './TrelloCard';\nimport TrelloActionButton from './TrelloActionButton';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport styled from 'styled-components';\nimport EditListButton from './EditListButton';\nimport TextArea from 'react-textarea-autosize';\nimport { editList } from '../actions';\nimport TrelloForm from './TrelloForm';\nimport Button from '@material-ui/core/Button';\n\nconst ListContainer = styled.div`\n    background-color: '#dfe3e6';\n    border-radius: 3px;\n    width: 22%;\n    padding: 16px;\n    margin-right: 8px;\n    height: 100%;\n`;\n\nconst List = styled.div`\n    background-color: ${(props) => (props.isDraggingOver ? '#dfe3e6' : '#efeeee')};\n    padding: 16px;\n    transition: all 0.1s;\n    box-shadow: -6px -6px 16px rgba(255, 255, 255, 0.5), 6px 6px 16px rgba(209, 205, 199, 0.5);\n    border-radius: 5px;\n    max-height: 70vh;\n    overflow: auto;\n`;\n\nclass InnerList extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        if (nextProps === this.props) {\n            return false;\n        }\n        return true;\n    }\n    render() {\n        return this.props.cards.map((card, index) => (\n            <TrelloCard\n                key={card.id}\n                text={card.text}\n                id={card.id}\n                index={index}\n                completed={card.completed}\n                isTiny={this.props.listID === '0'}\n                isTask={this.props.listID === '1'}\n                isGoal={this.props.listID === '2'}\n            />\n        ));\n    }\n}\n\nexport const TrelloList = (props) => {\n    const { title, listID, index } = props;\n    const [editing, setEditing] = useState(false);\n    const [text, setText] = useState(title);\n    const placeholder = `Add ${title}`;\n    const toggleEditing = () => {\n        setEditing(!editing);\n    };\n    const handleInputChange = (e) => {\n        setText(e.target.value);\n    };\n\n    const handleEditList = (e) => {\n        e.preventDefault();\n        const { dispatch } = props;\n        if (text.trim() !== '') {\n            dispatch(editList(text, listID));\n        }\n        toggleEditing();\n    };\n\n    const handleFocus = (e) => {\n        e.target.select();\n    };\n\n    const renderTitle = () => {\n        const editable = listID !== '0' &&listID !== '1' && listID !== '2';\n        return !editing ? (\n            <h3 style={{ marginLeft: '16px', color: '#303030', cursor: 'pointer',overflow:'hidden',cursor: editable ? 'pointer' : 'default',textOverflow:'ellipsis',whiteSpace:'nowrap'}} onClick={editable ? toggleEditing : undefined}>\n                {text}\n            </h3>\n        ) : (\n            <form onSubmit={handleEditList}>\n                <input\n                    type=\"text\"\n                    autoFocus\n                    onFocus={handleFocus}\n                    onBlur={handleEditList}\n                    value={text}\n                    onChange={handleInputChange}\n                    style={{\n                        resize: 'none',\n                        height: '100%',\n                        overflow: 'hidden',\n                        outline: 'none',\n                        border: 'none',\n                        fontSize: '1.1em',\n                        fontWeight: '700',\n                        color: '#606060',\n                        padding: '16px',\n                        marginTop:'3px',\n                        marginBottom:'12px'\n                    }}\n                />\n            </form>\n        );\n    };\n    return (\n        <Draggable draggableId={String(listID)} index={index}>\n            {(provided) => (\n                <ListContainer {...provided.draggableProps} ref={provided.innerRef}>\n                    <div\n                        style={{\n                            padding: '0 16px',\n                            minHeight:'50px'\n                        }}\n                    >\n                        {renderTitle()}\n                    </div>\n                    <div\n                        style={{\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'space-between',\n                            padding: '0 16px',\n                            alignItems: 'stretch',\n                            marginBottom: '1rem',\n                        }}\n                    >\n                        <TrelloForm listID={listID} />\n                    </div>\n                    <div {...provided.dragHandleProps}>\n                        <Droppable droppableId={String(listID)}>\n                            {(provided, snapshot) => (\n                                <List\n                                    {...provided.droppableProps}\n                                    ref={provided.innerRef}\n                                    isDraggingOver={snapshot.isDraggingOver}\n                                >\n                                    <InnerList cards={props.cards} listID={listID} />\n                                    {provided.placeholder}\n                                    {/* <TrelloActionButton listID={listID} /> */}\n                                </List>\n                            )}\n                        </Droppable>\n                    </div>\n                </ListContainer>\n            )}\n        </Draggable>\n    );\n};\n\nexport default connect()(TrelloList);\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport styles from './TodoForm.module.css';\n\nconst Footer = styled.div`\n    height: 6vh;\n    background-color: #f7f7f7;\n    display: flex;\n    justify-content: flex-end;\n    color: #202020;\n    align-items: center;\n    padding-right: 10px;\n    font-weight: 700;\n    z-index: 10;\n    text-decoration: none;\n    bottom:0;\n    top:auto;\n    width:100%;\n    position:fixed;\n`;\n\n\nexport default class TinyFooter extends Component {\n    render() {\n        return (\n            <Footer>\n                <NavLink exact to='/archive' activeClassName={styles.activeLink}>\n                    <button className={styles.Archive} style={{marginTop:'2px'}}>🗂 Archive</button>\n                </NavLink>\n                <NavLink exact to='/' activeClassName={styles.activeLink}><p className={styles.Title} id={styles.title} style={{marginRight:'32px'}}>💡📝🎖 Tiny</p></NavLink>\n            </Footer>\n        );\n    }\n}\n","import React, {useState} from 'react'\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { deleteCard } from '../actions/cardsActions';\nimport Typography from '@material-ui/core/Typography';\nimport CardContent from '@material-ui/core/CardContent';\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst Container = styled.div`\n    background-color: #efeeee;\n    width:22%;\n    display:inline-block;\n    margin-right:40px;\n    margin-bottom: 8px;\n    border-radius: 5px;\n    box-shadow: ${(props) => (props.isDragging ? '0px 5px 5px rgba(0,0,0,0.3)' : 'none')};\n    word-wrap: break-word;\n`;\nfunction ArchiveCard(props) {\n    const { text, id, index, completed, emoji } = props;\n    const [hover, setHover] = useState(false);\n\n    const handleDelete = () => {\n        const { dispatch, id } = props;\n        dispatch(deleteCard(id));\n        \n    };\n    const handleHover = () => {\n        setHover(true);\n    };\n\n    const handleHoverLeave = () => {\n        setHover(false);\n    };\n    \n\n    return (\n        <Container>\n            <div onMouseOver={handleHover} onMouseOut={handleHoverLeave} style={{boxShadow: 'rgba(255, 255, 255, 0.5) -6px -6px 16px, rgba(209, 205, 199, 0.5) 6px 6px 16px', marginBottom:'20px',transform: hover && 'translateY(-10px)',transition:'all 0.2s'}}>\n                <CardContent style={{marginBottom:'-20px'}}>\n                    <Typography\n                        gutterBottom\n                        style={{\n                            opacity: completed && '0.2',\n                            transition: 'all 0.2s',\n                        }}\n                    >\n                        {text}\n                    </Typography>\n                </CardContent>\n                <div style={{display:'flex',justifyContent:'space-between',alignItems:'center'}}>\n\n                    <span style={{fontSize:'1.5rem',marginLeft:'8px'}}>{emoji}</span>\n                    <IconButton onClick={handleDelete} style={{ transition: 'opacity 0.2s', opacity: hover ? 1 : 0 }}>\n                        <DeleteOutlineOutlinedIcon />\n                    </IconButton>\n                </div>\n                </div>\n        </Container>\n    )\n}\nexport default connect()(ArchiveCard);\n","import React from 'react';\nimport TinyFooter from './TinyFooter';\nimport styled from 'styled-components';\nimport styles from './TodoForm.module.css';\nimport ArrowBackOutlinedIcon from '@material-ui/icons/ArrowBackOutlined';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Icon } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport ArchiveCard from './ArchiveCard';\n\nfunction Archive(props) {\n    const { lists } = props;\n    return (\n        <div\n            style={{\n                height: '90vh',\n                \n                backgroundColor: '#efeeee',\n            }}\n        >\n            <div style={{ padding: '16px 48px', color: '#606060',overflow:'auto' }}>\n                <div style={{marginBottom:'16px'}}>\n                    <h3 style={{color:'#303030'}}>Archive 🗂</h3>\n                    <NavLink exact to=\"/\">\n                        <IconButton>\n                            <ArrowBackOutlinedIcon />\n                        </IconButton>\n                    </NavLink>\n                </div>\n                {lists.map((list) => list.id === '3' && list.cards.map((card) => <ArchiveCard key={card.id} text={card.text} id={card.id} emoji={card.emoji}/>))}\n            </div>\n            <TinyFooter />\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    lists: state.lists,\n});\n\nexport default connect(mapStateToProps)(Archive);\n","import React, { useEffect } from 'react';\nimport TrelloList from './TrelloList';\nimport { connect } from 'react-redux';\nimport TrelloActionButton from './TrelloActionButton';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { sort } from '../actions/cardsActions';\nimport styled from 'styled-components';\nimport TinyFooter from './TinyFooter';\nimport { HashRouter, Route, Switch, Link, Router, withRouter } from 'react-router-dom';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport Archive from './Archive';\n\nconst ListContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    background-color: #efeeee;\n    height:90vh;    \n`;\n\nconst App = (props) => {\n\n    useEffect(() => {\n        window.localStorage.setItem('todos', JSON.stringify(props.lists));\n    });\n\n\n    const onDragEnd = (result) => {\n        const { destination, source, draggableId, type } = result;\n        if (!destination) {\n            return;\n        }\n        props.dispatch(\n            sort(source.droppableId, destination.droppableId, source.index, destination.index, draggableId, type)\n        );\n    };\n\n    const { lists } = props;\n\n    const Routes = withRouter(({location}) => (\n<TransitionGroup>\n            <CSSTransition  key={location.pathname} classNames=\"fade\" timeout={200}>\n                    <Switch location={location}>\n                        <Route exact path=\"/\" render={() => (\n                            <>\n                                <DragDropContext onDragEnd={onDragEnd}>\n                                        <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\n                                            {(provided) => (\n                                                <ListContainer {...provided.droppableProps} ref={provided.innerRef}>\n                                                    {lists.map((list, index) => (\n                                                        list.id!=='3' && \n                                                        <TrelloList\n                                                            listID={list.id}\n                                                            key={list.id}\n                                                            title={list.title}\n                                                            cards={list.cards}\n                                                            index={index}\n                                                        />\n                                                    ))}\n                                                    {provided.placeholder}\n                                                    {lists.length < 5 && <TrelloActionButton list />}\n                                                </ListContainer>\n                                            )}\n                                        </Droppable>\n                                </DragDropContext>\n                                <TinyFooter />\n                            </>\n                        )}/>\n                        <Route exact path=\"/archive\" render={() => <Archive />} />\n                    </Switch>\n                </CSSTransition>\n            </TransitionGroup>\n    ));\n    \n    return (\n        <HashRouter>\n            <Routes />\n        </HashRouter>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    lists: state.lists,\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { CONSTANTS } from '../actions';\nimport uuid from 'uuid/v4';\n\nconst initialState = [\n    {\n        title: 'Tiny 💡',\n        id: '0',\n        cards: [\n            {\n                id: uuid(),\n                text: 'You can add a tiny todo here.',\n                completed: false,\n            },\n            {\n                id: uuid(),\n                text: 'Send an email to my colleague',\n                completed: true,\n            },\n        ],\n    },\n    {\n        title: 'Task 📝',\n        id: '1',\n        cards: [\n            {\n                id: uuid(),\n                text: 'You can add a task here.',\n                completed: false,\n            },\n            {\n                id: uuid(),\n                text: 'Do homework',\n                completed: true,\n            },\n            {\n                id: uuid(),\n                text: 'Go shopping',\n                completed: true,\n            },\n        ],\n    },\n    {\n        title: 'Goal 🎖',\n        id: '2',\n        cards: [\n            {\n                id: uuid(),\n                text: 'You can add a goal here',\n                completed: false,\n            },\n            {\n                id: uuid(),\n                text: 'Exercise',\n                completed: false,\n            },\n            {\n                id: uuid(),\n                text: 'Eat healthier',\n                completed: false,\n            },\n        ],\n    },\n    {\n        title: 'Archive 🗂',\n        id: '3',\n        cards: [\n            {\n                id: uuid(),\n                text: 'All the completed todos will go to archive after deleted.',\n                completed: false,\n            },\n            {\n                id: uuid(),\n                text: 'Start to use tiny!',\n                completed: false,\n            },\n            {\n                id: uuid(),\n                text: 'You can also add a customized column.',\n                completed: false,\n            },\n        ],\n    },\n];\n\nconst listReducer = (state = JSON.parse(window.localStorage.getItem('todos')) || initialState, action) => {\n    switch (action.type) {\n        case CONSTANTS.ADD_LIST: {\n            const newList = {\n                title: action.payload,\n                cards: [],\n                id: uuid(),\n            };\n            return [...state, newList];\n        }\n\n        case CONSTANTS.EDIT_LIST: {\n            const { title, listId } = action.payload;\n\n            const newState = state.map((list) => {\n                if (list.id === listId) {\n                    return {\n                        ...list,\n                        title: title,\n                    };\n                } else {\n                    return list;\n                }\n            });\n\n            return newState;\n        }\n\n        case CONSTANTS.ADD_CARD: {\n            const newCard = {\n                text: action.payload.text,\n                id: uuid(),\n                completed: false,\n            };\n            const newState = state.map((list) => {\n                if (list.id === action.payload.listId) {\n                    return {\n                        ...list,\n                        cards: [...list.cards, newCard],\n                    };\n                } else {\n                    return list;\n                }\n            });\n            return newState;\n        }\n\n        case CONSTANTS.EDIT_CARD: {\n            const { cardId, text } = action.payload;\n            let newState = [...state];\n            newState.forEach((list) => {\n                list.cards = list.cards.map((card) => {\n                    if (card.id === cardId) {\n                        return {\n                            ...card,\n                            text: text,\n                        };\n                    } else {\n                        return card;\n                    }\n                });\n            });\n            return newState;\n        }\n\n        case CONSTANTS.DELETE_CARD: {\n            const { cardId } = action.payload;\n            let newState = [...state];\n            let card;\n            let archive = { ...newState.find((list) => list.id === '3') };\n            for (let i = 0; i < newState.length; i++) {\n                for (let j = 0; j < newState[i].cards.length; j++) {\n                    let c = { ...newState[i].cards[j] };\n                    if (c.id === cardId) {\n                        card = c;\n                        //delete from archive\n                        if (newState[i].id === '3') {\n                            archive.cards = archive.cards.filter((card) => card.id !== cardId);\n                            newState.forEach((list) => {\n                                list.cards = list.cards.filter((card) => card.id !== cardId);\n                            });\n                            newState = newState.map((list) => {\n                                if (list.id === '3') {\n                                    return archive;\n                                } else return list;\n                            });\n                            return newState;\n                        }\n                        //delete from goal\n                        else if (newState[i].id === '2') {\n                            archive.cards.push({ ...card, emoji: '🎖' });\n                            newState.forEach((list) => {\n                                list.cards = list.cards.filter((card) => card.id !== cardId);\n                            });\n                            newState = newState.map((list) => {\n                                if (list.id === '3') {\n                                    return archive;\n                                } else return list;\n                            });\n                            return newState;\n                        }\n                        //delete from tiny\n                        else if (newState[i].id === '0') {\n                            if (card.completed) {\n                                archive.cards.push({ ...card, emoji: '💡' });\n                                newState.forEach((list) => {\n                                    list.cards = list.cards.filter((card) => card.id !== cardId);\n                                });\n                                newState = newState.map((list) => {\n                                    if (list.id === '3') {\n                                        return archive;\n                                    } else return list;\n                                });\n                                return newState;\n                            } else {\n                                newState.forEach((list) => {\n                                    list.cards = list.cards.filter((card) => card.id !== cardId);\n                                });\n                                return newState;\n                            }\n                        }\n                        //delete from task\n                        else if (newState[i].id === '1') {\n                            if (card.completed) {\n                                archive.cards.push({ ...card, emoji: '📝' });\n                                newState.forEach((list) => {\n                                    list.cards = list.cards.filter((card) => card.id !== cardId);\n                                });\n                                newState = newState.map((list) => {\n                                    if (list.id === '3') {\n                                        return archive;\n                                    } else return list;\n                                });\n                                return newState;\n                            } else {\n                                newState.forEach((list) => {\n                                    list.cards = list.cards.filter((card) => card.id !== cardId);\n                                });\n                                return newState;\n                            }\n                        }\n                        //delete from others\n                        else {\n                            if (card.completed) {\n                                archive.cards.push({ ...card, emoji: '' });\n                                newState.forEach((list) => {\n                                    list.cards = list.cards.filter((card) => card.id !== cardId);\n                                });\n                                newState = newState.map((list) => {\n                                    if (list.id === '3') {\n                                        return archive;\n                                    } else return list;\n                                });\n                                return newState;\n                            } else {\n                                newState.forEach((list) => {\n                                    list.cards = list.cards.filter((card) => card.id !== cardId);\n                                });\n                                return newState;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        case CONSTANTS.TOGGLE_CARD: {\n            const { cardId } = action.payload;\n            let newState = [...state];\n            newState.forEach((list) => {\n                list.cards = list.cards.map((card) => {\n                    if (card.id === cardId) {\n                        return {\n                            ...card,\n                            completed: !card.completed,\n                        };\n                    } else {\n                        return card;\n                    }\n                });\n            });\n\n            return newState;\n        }\n\n        case CONSTANTS.DRAG_HAPPENED: {\n            const {\n                droppableIdStart,\n                droppableIdEnd,\n                droppableIndexStart,\n                droppableIndexEnd,\n                draggableId,\n                type,\n            } = action.payload;\n            const newState = [...state];\n\n            if (type === 'list') {\n                const list = newState.splice(droppableIndexStart, 1);\n                newState.splice(droppableIndexEnd, 0, ...list);\n                return newState;\n            }\n\n            //in the same list\n            if (droppableIdStart === droppableIdEnd) {\n                const list = state.find((list) => droppableIdStart === list.id);\n                const card = list.cards.splice(droppableIndexStart, 1);\n                list.cards.splice(droppableIndexEnd, 0, ...card);\n            }\n\n            //in different lists\n            if (droppableIdStart !== droppableIdEnd) {\n                const listStart = state.find((list) => droppableIdStart === list.id);\n                const card = listStart.cards.splice(droppableIndexStart, 1);\n                const listEnd = state.find((list) => droppableIdEnd === list.id);\n                listEnd.cards.splice(droppableIndexEnd, 0, ...card);\n            }\n\n            return newState;\n        }\n\n        default:\n            return state;\n    }\n};\n\nexport default listReducer;\n","import { combineReducers } from 'redux';\nimport listReducer from './ListReducer';\n\nexport default combineReducers({\n    lists: listReducer,\n});\n","import {createStore} from \"redux\";\nimport rootReducer from '../reducers';\n\n\nconst store = createStore(rootReducer);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}