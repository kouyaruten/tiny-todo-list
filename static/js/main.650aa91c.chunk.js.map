{"version":3,"sources":["components/TodoForm.module.css","actions/listsActions.js","actions/index.js","actions/cardsActions.js","components/TrelloCard.js","components/TrelloActionButton.js","components/TrelloForm.js","components/EditListButton.js","components/TrelloList.js","actions/themeAction.js","components/TinyFooter.js","components/ArchiveCard.js","components/Archive.js","components/App.js","serviceWorker.js","reducers/ListReducer.js","reducers/themeReducer.js","reducers/index.js","store/index.js","index.js"],"names":["module","exports","addList","title","type","CONSTANTS","ADD_LIST","payload","editList","listId","EDIT_LIST","ADD_CARD","EDIT_CARD","DELETE_CARD","TOGGLE_CARD","DRAG_HAPPENED","TOGGLE_THEME","addCard","text","deleteCard","cardId","Container","styled","div","props","isDarkMode","isDragging","connect","id","index","completed","isTiny","isTask","isGoal","useState","editing","setEditing","todo","setTodo","hover","setHover","handleDelete","dispatch","toggleComplete","toggleForm","handleHover","handleHoverLeave","handleSubmit","e","preventDefault","editCard","handleInputChange","target","value","handleFocus","select","style","marginBottom","backgroundColor","borderRadius","autoFocus","onFocus","onBlur","onChange","resize","width","overflow","outline","border","fontSize","padding","display","justifyContent","IconButton","onClick","boxShadow","color","renderForm","draggableId","String","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","onMouseOver","onMouseOut","CardContent","Typography","gutterBottom","opacity","textDecoration","transition","TrelloActionButton","state","formOpen","openForm","setState","closeForm","handleAddList","handleAddCard","listID","list","placeholder","marginTop","flexDirection","alignItems","onSubmit","marginRight","Button","renderAddButton","buttonText","this","React","Component","ListContainer","List","isDraggingOver","InnerList","nextProps","cards","map","card","key","setText","toggleEditing","handleEditList","trim","borderColor","minHeight","editable","height","fontWeight","borderLeft","borderLeftColor","paddingLeft","cursor","undefined","renderTitle","TrelloForm","droppableId","droppableProps","toggleTheme","Footer","TinyFooter","darkmode","theme","handleChange","event","checked","marginLeft","Switch","name","inputProps","exact","to","styles","linkDark","link","activeStyle","linkDarkActive","linkActive","emoji","transform","lists","console","log","position","reverse","useEffect","window","localStorage","setItem","JSON","stringify","onDragEnd","result","destination","source","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","sort","Routes","withRouter","location","TransitionGroup","CSSTransition","pathname","classNames","timeout","path","render","direction","length","Boolean","hostname","match","initialState","uuid","listReducer","parse","getItem","action","newList","newState","newCard","forEach","archive","find","i","j","c","filter","push","splice","listStart","listEnd","themeReducer","combineReducers","store","createStore","rootReducer","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.650aa91c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Archive\":\"TodoForm_Archive__HSHhq\",\"Title\":\"TodoForm_Title__3NJMU\",\"title\":\"TodoForm_title__1ROYc\",\"activeLink\":\"TodoForm_activeLink__SPnNi\"};","import { CONSTANTS } from '../actions';\n\nexport const addList = (title) => {\n    return {\n        type: CONSTANTS.ADD_LIST,\n        payload: title,\n    };\n};\n\nexport const editList = (title, listId) => {\n    return {\n        type: CONSTANTS.EDIT_LIST,\n        payload: { title, listId },\n    };\n};\n","export * from './listsActions';\n\nexport const CONSTANTS = {\n  ADD_CARD: 'ADD_CARD',\n  EDIT_CARD: 'EDIT_CARD',\n  DELETE_CARD: 'DELETE_CARD',\n  TOGGLE_CARD: 'TOGGLE_CARD',\n  ADD_LIST: 'ADD_LIST',\n  EDIT_LIST: 'EDIT_LIST',\n  DRAG_HAPPENED: 'DRAG_HAPPENED',\n  TOGGLE_THEME: 'TOGGLE_THEME',\n};\n","import { CONSTANTS } from '../actions';\n\nexport const addCard = (listId, text) => {\n    return {\n        type: CONSTANTS.ADD_CARD,\n        payload: { text, listId },\n    };\n};\n\nexport const editCard = (cardId, text) => {\n    return {\n        type: CONSTANTS.EDIT_CARD,\n        payload: { text, cardId },\n    };\n};\n\nexport const deleteCard = (cardId) => {\n    return {\n        type: CONSTANTS.DELETE_CARD,\n        payload: { cardId },\n    };\n};\n\nexport const toggleCard = (cardId) => {\n    return {\n        type: CONSTANTS.TOGGLE_CARD,\n        payload: { cardId },\n    };\n};\n\nexport const sort = (droppableIdStart, droppableIdEnd, droppableIndexStart, droppableIndexEnd, draggableId, type) => {\n    return {\n        type: CONSTANTS.DRAG_HAPPENED,\n        payload: {\n            droppableIdStart,\n            droppableIdEnd,\n            droppableIndexStart,\n            droppableIndexEnd,\n            draggableId,\n            type,\n        },\n    };\n};\n","import React, { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport DoneOutlineOutlinedIcon from '@material-ui/icons/DoneOutlineOutlined';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport { Draggable } from 'react-beautiful-dnd';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { deleteCard, toggleCard, editCard } from '../actions/cardsActions';\nimport TextArea from 'react-textarea-autosize';\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\n\nconst Container = styled.div`\n  background-color: ${(props) => (props.isDarkMode ? '#5d5d63' : props.isDragging ? '#89b7b7' : '#fffefb')};\n  color: ${(props) => props.isDarkMode && '#efeff4'};\n  margin-bottom: 8px;\n  border-radius: 5px;\n  box-shadow: ${(props) => (props.isDragging ? '0px 5px 5px rgba(0,0,0,0.3)' : 'none')};\n  word-wrap: break-word;\n  transition: all 0.2s;\n`;\n\nconst TrelloCard = (props) => {\n  const { text, id, index, completed, isTiny, isTask, isGoal, isDarkMode } = props;\n  const [editing, setEditing] = useState(false);\n  const [todo, setTodo] = useState(text);\n  const [hover, setHover] = useState(false);\n\n  const handleDelete = () => {\n    const { dispatch, id } = props;\n    dispatch(deleteCard(id));\n  };\n\n  const toggleComplete = () => {\n    const { dispatch, id } = props;\n    dispatch(toggleCard(id));\n  };\n\n  const toggleForm = () => {\n    setEditing(!editing);\n  };\n\n  const handleHover = () => {\n    setHover(true);\n  };\n\n  const handleHoverLeave = () => {\n    setHover(false);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const { dispatch, id } = props;\n    dispatch(editCard(id, todo));\n\n    toggleForm();\n  };\n\n  const handleInputChange = (e) => {\n    setTodo(e.target.value);\n  };\n\n  const renderTinyCard = () => {\n    return (\n      <div\n        onMouseOver={handleHover}\n        onMouseOut={handleHoverLeave}\n        onClick={toggleComplete}\n        style={{ marginBottom: '20px' }}\n      >\n        <CardContent style={{ marginBottom: '-20px' }}>\n          <Typography\n            gutterBottom\n            style={{\n              opacity: completed && '0.2',\n              textDecoration: completed && 'line-through',\n              transition: 'all 0.2s',\n            }}\n          >\n            {text}\n          </Typography>\n        </CardContent>\n        <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n          <IconButton\n            onClick={handleDelete}\n            style={{\n              transition: 'opacity 0.2s',\n              opacity: hover ? 1 : 0,\n              boxShadow: isDarkMode && '-6px -6px 16px rgba(60, 60, 60, 0.5), 6px 6px 16px rgba(46, 50, 56, 0.5)',\n            }}\n          >\n            <DeleteOutlineOutlinedIcon style={{ color: isDarkMode && '#e9ecef' }} />\n          </IconButton>\n        </div>\n      </div>\n    );\n  };\n  const renderGoalCard = () => {\n    return (\n      <div\n        onMouseOver={handleHover}\n        onMouseOut={handleHoverLeave}\n        style={{\n          backgroundColor: isDarkMode ? '#3a3a3c' : '#efeeee',\n          boxShadow: isDarkMode\n            ? 'inset -6px -6px 16px rgba(40, 40, 40, 0.5), inset 6px 6px 16px rgba(46, 50, 56, 0.5)'\n            : 'inset -6px -6px 16px rgba(255, 255, 255, 0.5), inset 6px 6px 16px rgba(209, 205, 199, 0.5)',\n          marginBottom: '20px',\n          // border: isDarkMode && '2px solid #606060',\n          borderRadius: 5,\n        }}\n      >\n        <CardContent style={{ marginBottom: '-20px' }}>\n          <Typography\n            gutterBottom\n            style={{\n              opacity: completed && '0.2',\n              textDecoration: completed && 'line-through',\n              transition: 'all 0.2s',\n            }}\n          >\n            {text}\n          </Typography>\n        </CardContent>\n\n        <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n          <IconButton\n            onClick={toggleForm}\n            style={{\n              transition: 'opacity 0.2s',\n              opacity: hover ? 1 : 0,\n              boxShadow: isDarkMode && '-6px -6px 16px rgba(40, 40, 40, 0.5), 6px 6px 16px rgba(46, 50, 56, 0.5)',\n              color: isDarkMode && '#efeff4',\n            }}\n          >\n            <EditOutlinedIcon />\n          </IconButton>\n          <IconButton\n            onClick={handleDelete}\n            style={{\n              transition: 'opacity 0.2s',\n              opacity: hover ? 1 : 0,\n              boxShadow: isDarkMode && '-6px -6px 16px rgba(40, 40, 40, 0.5), 6px 6px 16px rgba(46, 50, 56, 0.5)',\n              color: isDarkMode && '#efeff4',\n            }}\n          >\n            <DeleteOutlineOutlinedIcon />\n          </IconButton>\n        </div>\n      </div>\n    );\n  };\n  const renderCard = () => {\n    return (\n      <div\n        onMouseOver={handleHover}\n        onMouseOut={handleHoverLeave}\n        style={{\n          // boxShadow: 'rgba(255, 255, 255, 0.5) -6px -6px 16px, rgba(209, 205, 199, 0.5) 6px 6px 16px',\n          boxShadow: 'rgba(0,0,0,0.1) 0 4px 4px',\n          marginBottom: '20px',\n        }}\n      >\n        <CardContent style={{ marginBottom: '-20px' }}>\n          <Typography\n            gutterBottom\n            style={{\n              opacity: completed && '0.2',\n              textDecoration: completed && 'line-through',\n              transition: 'all 0.2s',\n            }}\n          >\n            {text}\n          </Typography>\n        </CardContent>\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          {completed ? (\n            <IconButton\n              onClick={toggleComplete}\n              style={{\n                boxShadow: isDarkMode && '-6px -6px 16px rgba(60, 60, 60, 0.5), 6px 6px 16px rgba(46, 50, 56, 0.5)',\n                color: isDarkMode && '#efeff4',\n                opacity: 0.4,\n              }}\n            >\n              <CheckCircleIcon />\n            </IconButton>\n          ) : (\n            <IconButton\n              onClick={toggleComplete}\n              style={{\n                boxShadow: isDarkMode && '-6px -6px 16px rgba(60, 60, 60, 0.5), 6px 6px 16px rgba(46, 50, 56, 0.5)',\n                color: isDarkMode && '#efeff4',\n              }}\n            >\n              <DoneOutlineOutlinedIcon />\n            </IconButton>\n          )}\n          <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <IconButton\n              onClick={toggleForm}\n              style={{\n                transition: 'opacity 0.2s',\n                opacity: hover ? 1 : 0,\n                boxShadow: isDarkMode && '-6px -6px 16px rgba(60, 60, 60, 0.5), 6px 6px 16px rgba(46, 50, 56, 0.5)',\n                color: isDarkMode && '#efeff4',\n              }}\n            >\n              <EditOutlinedIcon />\n            </IconButton>\n            <IconButton\n              onClick={handleDelete}\n              style={{\n                transition: 'opacity 0.2s',\n                opacity: hover ? 1 : 0,\n                boxShadow: isDarkMode && '-6px -6px 16px rgba(60, 60, 60, 0.5), 6px 6px 16px rgba(46, 50, 56, 0.5)',\n                color: isDarkMode && '#efeff4',\n              }}\n            >\n              <DeleteOutlineOutlinedIcon />\n            </IconButton>\n          </div>\n        </div>\n      </div>\n    );\n  };\n  const renderCustomizedCard = () => {\n    return (\n      <div\n        onMouseOver={handleHover}\n        onMouseOut={handleHoverLeave}\n        style={{\n          // boxShadow: 'rgba(255, 255, 255, 0.5) -6px -6px 16px, rgba(209, 205, 199, 0.5) 6px 6px 16px',\n          boxShadow: 'rgba(0,0,0,0.1) 0 4px 4px',\n          marginBottom: '20px',\n        }}\n      >\n        <CardContent style={{ marginBottom: '-20px' }}>\n          <Typography\n            gutterBottom\n            style={{\n              opacity: completed && '0.2',\n              textDecoration: completed && 'line-through',\n              transition: 'all 0.2s',\n            }}\n          >\n            {text}\n          </Typography>\n        </CardContent>\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          {completed ? (\n            <IconButton\n              onClick={toggleComplete}\n              style={{\n                boxShadow: isDarkMode && '-6px -6px 16px rgba(60, 60, 60, 0.5), 6px 6px 16px rgba(46, 50, 56, 0.5)',\n                color: isDarkMode && '#efeff4',\n                opacity: hover ? 0.4 : 0,\n              }}\n            >\n              <CheckCircleIcon />\n            </IconButton>\n          ) : (\n            <IconButton\n              onClick={toggleComplete}\n              style={{\n                boxShadow: isDarkMode && '-6px -6px 16px rgba(60, 60, 60, 0.5), 6px 6px 16px rgba(46, 50, 56, 0.5)',\n                color: isDarkMode && '#efeff4',\n                opacity: hover ? 1 : 0,\n              }}\n            >\n              <DoneOutlineOutlinedIcon />\n            </IconButton>\n          )}\n          <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <IconButton\n              onClick={toggleForm}\n              style={{\n                transition: 'opacity 0.2s',\n                opacity: hover ? 1 : 0,\n                boxShadow: isDarkMode && '-6px -6px 16px rgba(60, 60, 60, 0.5), 6px 6px 16px rgba(46, 50, 56, 0.5)',\n                color: isDarkMode && '#efeff4',\n              }}\n            >\n              <EditOutlinedIcon />\n            </IconButton>\n            <IconButton\n              onClick={handleDelete}\n              style={{\n                transition: 'opacity 0.2s',\n                opacity: hover ? 1 : 0,\n                boxShadow: isDarkMode && '-6px -6px 16px rgba(60, 60, 60, 0.5), 6px 6px 16px rgba(46, 50, 56, 0.5)',\n                color: isDarkMode && '#efeff4',\n              }}\n            >\n              <DeleteOutlineOutlinedIcon />\n            </IconButton>\n          </div>\n        </div>\n      </div>\n    );\n  };\n  const handleFocus = (e) => {\n    e.target.select();\n  };\n\n  const renderForm = () => {\n    return (\n      <div\n        style={{ marginBottom: '20px', backgroundColor: isDarkMode ? '#5d5d63' : isGoal && '#efeeee', borderRadius: 5 }}\n      >\n        <form>\n          <TextArea\n            autoFocus\n            onFocus={handleFocus}\n            onBlur={handleSubmit}\n            value={todo}\n            onChange={handleInputChange}\n            style={{\n              resize: 'none',\n              width: '100%',\n              overflow: 'hidden',\n              outline: 'none',\n              border: 'none',\n              fontSize: 'inherit',\n              padding: '16px',\n              fontSize: '1rem',\n              lineHeight: '1.5',\n              letterSpacing: '0.00938em',\n              marginBottom: '-15px',\n              borderRadius: 5,\n              color: isDarkMode && '#efeff4',\n              backgroundColor: isDarkMode ? '#5d5d63' : isGoal && '#efeeee',\n            }}\n          />\n        </form>\n        <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n          <IconButton\n            onClick={handleSubmit}\n            style={{\n              boxShadow: isDarkMode && '-6px -6px 16px rgba(60, 60, 60, 0.5), 6px 6px 16px rgba(46, 50, 56, 0.5)',\n              color: isDarkMode && '#efeff4',\n            }}\n          >\n            <SaveOutlinedIcon />\n          </IconButton>\n          <IconButton\n            onClick={toggleForm}\n            style={{\n              boxShadow: isDarkMode && '-6px -6px 16px rgba(60, 60, 60, 0.5), 6px 6px 16px rgba(46, 50, 56, 0.5)',\n              color: isDarkMode && '#efeff4',\n            }}\n          >\n            <CancelOutlinedIcon />\n          </IconButton>\n        </div>\n      </div>\n    );\n  };\n  return editing ? (\n    renderForm()\n  ) : (\n    <Draggable draggableId={String(id)} index={index}>\n      {(provided, snapshot) => (\n        <Container\n          isDarkMode={isDarkMode}\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          isDragging={snapshot.isDragging}\n          // style={{opacity: completed && '0.4'}}\n        >\n          {isTiny ? renderTinyCard() : isGoal ? renderGoalCard() : isTask ? renderCard() : renderCustomizedCard()}\n        </Container>\n      )}\n    </Draggable>\n  );\n};\n\nconst styles = {\n  cardContainer: {\n    marginBottom: 8,\n  },\n};\n\nexport default connect()(TrelloCard);\n","import React from 'react';\nimport Icon from '@material-ui/core/Icon';\nimport { Button, Card, IconButton } from '@material-ui/core';\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\nimport TextArea from 'react-textarea-autosize';\nimport { connect } from 'react-redux';\nimport { addList } from '../actions';\nimport { addCard } from '../actions/cardsActions';\nimport classes from './TodoForm.module.css';\n\nclass TrelloActionButton extends React.Component {\n  state = { formOpen: false, text: '', hover: false };\n\n  openForm = () => {\n    this.setState({ formOpen: true });\n  };\n\n  closeForm = () => {\n    this.setState({ formOpen: false });\n  };\n\n  handleInputChange = (e) => {\n    this.setState({ text: e.target.value });\n  };\n\n  handleAddList = () => {\n    const { dispatch } = this.props;\n    const { text } = this.state;\n    if (text) {\n      dispatch(addList(text));\n    }\n    this.setState({ text: '' });\n  };\n\n  handleAddCard = () => {\n    const { dispatch, listID } = this.props;\n    const { text } = this.state;\n    if (text) {\n      dispatch(addCard(listID, text));\n    }\n    this.setState({ text: '' });\n  };\n\n  renderForm = () => {\n    const { list, isDarkMode } = this.props;\n    const placeholder = list ? 'Enter list title...' : 'Enter a title for this card...';\n    const buttonTitle = list ? 'Add List' : 'Add Card';\n    return (\n      <div style={{ width: '22%', marginTop: '5rem', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        <form onSubmit={this.handleAddList}>\n          <input\n            placeholder={placeholder}\n            type=\"text\"\n            autoFocus\n            onBlur={this.closeForm}\n            value={this.state.text}\n            onChange={this.handleInputChange}\n            style={{\n              resize: 'none',\n              overflow: 'hidden',\n              outline: 'none',\n              border: 'none',\n              backgroundColor: isDarkMode && '#3a3a3c',\n              boxShadow: isDarkMode && 'none',\n              marginRight: '10%',\n            }}\n          />\n          <Button\n            onClick={this.handleAddList}\n            style={{\n              padding: '13px 40px',\n              color: '#606060',\n              boxShadow: isDarkMode && 'none',\n              backgroundColor: isDarkMode && '#3a3a3c',\n            }}\n          >\n            Add\n          </Button>\n        </form>\n      </div>\n    );\n  };\n\n  renderAddButton = () => {\n    const { list, isDarkMode } = this.props;\n    const buttonText = list ? 'Add your list' : 'Add another card';\n    return (\n      <div style={{ width: '22%', marginTop: '5rem', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        <Button\n          onClick={this.openForm}\n          style={{\n            padding: '10px 40px',\n            color: isDarkMode && '#efeff4',\n            boxShadow: isDarkMode && ' -6px -6px 16px rgba(20, 20, 20, 0.5),  6px 6px 16px rgba(46, 50, 56, 0.5)',\n            backgroundColor: isDarkMode && '#3a3a3c',\n          }}\n        >\n          {buttonText}\n        </Button>\n      </div>\n    );\n  };\n  render() {\n    return this.state.formOpen ? this.renderForm() : this.renderAddButton();\n  }\n}\n\nconst styles = {\n  openForButtonGroup: {\n    display: 'flex',\n    alignItems: 'center',\n    cursor: 'pointer',\n    borderRadius: 3,\n    height: 36,\n    width: 272,\n    paddingLeft: 10,\n  },\n  formButtonGroup: {\n    marginTop: 8,\n    display: 'flex',\n    alignItems: 'center',\n  },\n  addListButton: {\n    display: 'flex',\n    alignItems: 'center',\n    cursor: 'pointer',\n    borderRadius: 3,\n    height: 36,\n    width: 272,\n    paddingLeft: 10,\n    color: '#909090',\n    backgroundColor: '#efeeee',\n    marginTop: '5.5rem',\n    justifyContent: 'center',\n    '&:hover': {\n      backgroundColor: '#eeeeee',\n    },\n    transition: 'all 0.2s',\n  },\n};\n\nexport default connect()(TrelloActionButton);\n","import React from 'react';\nimport Icon from '@material-ui/core/Icon';\nimport { Button, Card } from '@material-ui/core';\nimport TextArea from 'react-textarea-autosize';\nimport { connect } from 'react-redux';\nimport { addList } from '../actions';\nimport { addCard } from '../actions/cardsActions';\nimport classes from './TodoForm.module.css';\n\nclass TrelloActionButton extends React.Component {\n  state = { formOpen: false, text: '' };\n\n  openForm = () => {\n    this.setState({ formOpen: true });\n  };\n\n  closeForm = () => {\n    this.setState({ formOpen: false });\n  };\n\n  handleInputChange = (e) => {\n    this.setState({ text: e.target.value });\n  };\n\n  handleAddCard = () => {\n    const { dispatch, listID } = this.props;\n    const { text } = this.state;\n    if (text) {\n      dispatch(addCard(listID, text));\n    }\n    this.setState({ text: '' });\n  };\n\n  render() {\n    const placeholder = 'Add new card...';\n    const { isDarkMode } = this.props;\n    return (\n      <form\n        onSubmit={this.handleAddCard}\n        style={{ width: '100%', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}\n      >\n        <input\n          placeholder={placeholder}\n          onBlur={this.closeForm}\n          value={this.state.text}\n          onChange={this.handleInputChange}\n          style={{\n            resize: 'none',\n            overflow: 'hidden',\n            outline: 'none',\n            border: 'none',\n            marginRight: '10%',\n            color: isDarkMode && '#efeff4',\n            boxShadow: isDarkMode && 'none',\n            backgroundColor: isDarkMode && '#3a3a3c',\n          }}\n        />\n        <Button\n          onClick={this.handleAddCard}\n          style={{\n            padding: '13px 40px',\n            color: '#606060',\n            boxShadow: isDarkMode && 'none',\n            backgroundColor: isDarkMode && '#3a3a3c',\n          }}\n        >\n          Add\n        </Button>\n      </form>\n    );\n  }\n}\n\nexport default connect()(TrelloActionButton);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { editList } from '../actions';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport { Component } from 'react';\n\nexport default class EditListButton extends Component {\n    state = { formOpen: false, text: '' };\n    handleEditList = () => {\n        const { dispatch, listID } = this.props;\n        const { text } = this.state;\n        if (text) {\n            dispatch(editList(text, listID));\n        }\n        this.setState({ text: '' });\n    };\n    handleInputChange = (e) => {\n        this.setState({ text: e.target.value });\n    };\n    render() {\n        return <EditOutlinedIcon style={{color:'#606060'}}/>;\n    }\n}\n","import React, { Component, useState } from 'react';\nimport { connect } from 'react-redux';\nimport TrelloCard from './TrelloCard';\nimport TrelloActionButton from './TrelloActionButton';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport styled from 'styled-components';\nimport EditListButton from './EditListButton';\nimport TextArea from 'react-textarea-autosize';\nimport { editList } from '../actions';\nimport TrelloForm from './TrelloForm';\nimport Button from '@material-ui/core/Button';\n\nconst ListContainer = styled.div`\n  background-color: '#dfe3e6';\n  border-radius: 3px;\n  width: 22%;\n  padding: 16px;\n  margin-right: 8px;\n  height: 100%;\n`;\n\nconst List = styled.div`\n  background-color: ${(props) =>\n    props.isDarkMode ? (props.isDraggingOver ? '#40444e' : '#3a3a3c') : props.isDraggingOver ? '#dfe3e6' : '#efeeee'};\n  padding: 16px;\n  transition: all 0.1s;\n  box-shadow: ${(props) =>\n    props.isDarkMode ? 'none' : '-6px -6px 16px rgba(255, 255, 255, 0.5), 6px 6px 16px rgba(209, 205, 199, 0.5)'};\n  border-radius: 5px;\n  max-height: 70vh;\n  overflow: auto;\n`;\n\nclass InnerList extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    if (nextProps === this.props) {\n      return false;\n    }\n    return true;\n  }\n  render() {\n    return this.props.cards.map((card, index) => (\n      <TrelloCard\n        key={card.id}\n        text={card.text}\n        id={card.id}\n        index={index}\n        completed={card.completed}\n        isTiny={this.props.listID === '0'}\n        isTask={this.props.listID === '1'}\n        isGoal={this.props.listID === '2'}\n        isDarkMode={this.props.isDarkMode}\n      />\n    ));\n  }\n}\n\nexport const TrelloList = (props) => {\n  const { title, listID, index, isDarkMode } = props;\n  const [editing, setEditing] = useState(false);\n  const [text, setText] = useState(title);\n  const placeholder = `Add ${title}`;\n  const toggleEditing = () => {\n    setEditing(!editing);\n  };\n  const handleInputChange = (e) => {\n    setText(e.target.value);\n  };\n\n  const handleEditList = (e) => {\n    e.preventDefault();\n    const { dispatch } = props;\n    if (text.trim() !== '') {\n      dispatch(editList(text, listID));\n    }\n    toggleEditing();\n  };\n\n  const handleFocus = (e) => {\n    e.target.select();\n  };\n\n  const borderColor =\n    listID === '2'\n      ? 'rgb(0,92,175)'\n      : listID === '1'\n      ? 'rgb(181,73,91)'\n      : listID === '0'\n      ? 'rgb(105,176,172)'\n      : 'rgb(90,90,90)';\n\n  const renderTitle = () => {\n    const editable = listID !== '0' && listID !== '1' && listID !== '2';\n    return !editing ? (\n      <h3\n        style={{\n          borderLeft: '10px solid',\n          borderLeftColor: borderColor,\n          paddingLeft: '16px',\n          color: isDarkMode ? '#efeff4' : '#37352f',\n          cursor: 'pointer',\n          overflow: 'hidden',\n          cursor: editable ? 'pointer' : 'default',\n          textOverflow: 'ellipsis',\n          whiteSpace: 'nowrap',\n        }}\n        onClick={editable ? toggleEditing : undefined}\n      >\n        {text}\n      </h3>\n    ) : (\n      <form onSubmit={handleEditList}>\n        <input\n          type=\"text\"\n          autoFocus\n          onFocus={handleFocus}\n          onBlur={handleEditList}\n          value={text}\n          onChange={handleInputChange}\n          style={{\n            resize: 'none',\n            height: '100%',\n            overflow: 'hidden',\n            outline: 'none',\n            backgroundColor: isDarkMode && '#5d5d63',\n            boxShadow:\n              isDarkMode && 'inset -6px -6px 16px rgba(60, 60, 60, 0.5), inset 6px 6px 16px rgba(46, 50, 56, 0.5)',\n            color: isDarkMode && '#efeff4',\n            border: 'none',\n            fontSize: '1.1em',\n            fontWeight: '700',\n            padding: '16px',\n            marginTop: '3px',\n            marginBottom: '32px',\n          }}\n        />\n      </form>\n    );\n  };\n  return (\n    <Draggable draggableId={String(listID)} index={index}>\n      {(provided) => (\n        <ListContainer {...provided.draggableProps} ref={provided.innerRef}>\n          <div\n            style={{\n              padding: '0 16px',\n              minHeight: '50px',\n            }}\n          >\n            {renderTitle()}\n          </div>\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              padding: '0 16px',\n              alignItems: 'stretch',\n              marginBottom: '1rem',\n            }}\n          >\n            <TrelloForm listID={listID} isDarkMode={isDarkMode} />\n          </div>\n          <div {...provided.dragHandleProps}>\n            <Droppable droppableId={String(listID)}>\n              {(provided, snapshot) => (\n                <List\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                  isDraggingOver={snapshot.isDraggingOver}\n                  isDarkMode={isDarkMode}\n                >\n                  <InnerList cards={props.cards} listID={listID} isDarkMode={isDarkMode} />\n                  {provided.placeholder}\n                  {/* <TrelloActionButton listID={listID} /> */}\n                </List>\n              )}\n            </Droppable>\n          </div>\n        </ListContainer>\n      )}\n    </Draggable>\n  );\n};\n\nexport default connect()(TrelloList);\n","import { CONSTANTS } from '../actions';\n\nexport const toggleTheme = () => {\n  return {\n    type: CONSTANTS.TOGGLE_THEME,\n    payload: {},\n  };\n};\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport Switch from '@material-ui/core/Switch';\nimport { toggleTheme } from '../actions/themeAction';\nimport { connect } from 'react-redux';\n\nconst Footer = styled.div`\n  height: 6vh;\n  background-color: ${(props) => (props.isDarkMode ? '#1c1c1e' : '#f7f7f7')};\n  display: flex;\n  justify-content: space-between;\n  color: ${(props) => (props.isDarkMode ? '#efeff4' : '#202020')};\n  align-items: center;\n  padding-right: 40px;\n  font-weight: 700;\n  z-index: 10;\n  text-decoration: none;\n  bottom: 0;\n  width: 100%;\n  position: fixed;\n`;\n\nclass TinyFooter extends Component {\n  state = { darkmode: this.props.theme.darkmode };\n  handleChange = (event) => {\n    this.setState({ darkmode: event.target.checked });\n    this.props.dispatch(toggleTheme());\n  };\n  render() {\n    return (\n      <Footer isDarkMode={this.state.darkmode}>\n        <div style={{ marginLeft: 32 }}>\n          <span style={{ opacity: this.state.darkmode ? '1' : '0.4' }}>🌙</span>\n\n          <Switch\n            checked={this.state.darkmode}\n            onChange={this.handleChange}\n            color=\"primary\"\n            name=\"checkedB\"\n            inputProps={{ 'aria-label': 'primary checkbox' }}\n          />\n        </div>\n        <div style={{ display: 'flex', alignItems: 'center', marginRight: 32 }}>\n          <NavLink\n            exact\n            to=\"/archive\"\n            style={this.state.darkmode ? styles.linkDark : styles.link}\n            activeStyle={this.state.darkmode ? styles.linkDarkActive : styles.linkActive}\n          >\n            🗂 Archive\n          </NavLink>\n          <NavLink\n            exact\n            to=\"/\"\n            style={this.state.darkmode ? styles.linkDark : styles.link}\n            activeStyle={this.state.darkmode ? styles.linkDarkActive : styles.linkActive}\n          >\n            💡📝🎖 Tiny\n          </NavLink>\n        </div>\n      </Footer>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  theme: state.theme,\n});\n\nconst styles = {\n  link: {\n    color: '#606060',\n    opacity: '0.4',\n    padding: '5px 20px 5px 20px',\n    borderRadius: 5,\n    marginRight: 5,\n    marginLeft: 5,\n    '&:hover': {\n      backgroundColor: '#000000',\n    },\n  },\n  linkActive: {\n    opacity: 1,\n    color: '#606060',\n    boxShadow: 'inset -6px -6px 16px rgba(255, 255, 255, 0.5), inset 6px 6px 16px rgba(209, 205, 199, 0.5)',\n  },\n  linkDark: {\n    color: '#efeff4',\n    opacity: '0.4',\n    padding: '5px 20px 5px 20px',\n    borderRadius: 5,\n    marginRight: 5,\n    marginLeft: 5,\n  },\n  linkDarkActive: {\n    opacity: 1,\n    color: '#efeff4',\n    boxShadow: 'inset -6px -6px 16px rgba(40, 40, 40, 0.5), inset 6px 6px 16px rgba(46, 50, 56, 0.5)',\n    backgroundColor: '#3c3c3e',\n  },\n};\nexport default connect(mapStateToProps)(TinyFooter);\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { deleteCard } from '../actions/cardsActions';\nimport Typography from '@material-ui/core/Typography';\nimport CardContent from '@material-ui/core/CardContent';\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\nimport IconButton from '@material-ui/core/IconButton';\nconst Container = styled.div`\n  width: 22%;\n  display: inline-block;\n  margin-right: 40px;\n  margin-bottom: 8px;\n  border-radius: 5px;\n  box-shadow: ${(props) => (props.isDragging ? '0px 5px 5px rgba(0,0,0,0.3)' : 'none')};\n  word-wrap: break-word;\n`;\n\nfunction ArchiveCard(props) {\n  const { text, id, index, completed, emoji, isDarkMode } = props;\n  const [hover, setHover] = useState(false);\n\n  const handleDelete = () => {\n    const { dispatch, id } = props;\n    dispatch(deleteCard(id));\n  };\n  const handleHover = () => {\n    setHover(true);\n  };\n\n  const handleHoverLeave = () => {\n    setHover(false);\n  };\n\n  return (\n    <Container isDarkMode={isDarkMode}>\n      <div\n        onMouseOver={handleHover}\n        onMouseOut={handleHoverLeave}\n        style={{\n          boxShadow: isDarkMode\n            ? 'rgba(30, 30, 30, 0.5) -6px -6px 16px, rgba(46, 50, 56, 0.5) 6px 6px 16px'\n            : 'rgba(255, 255, 255, 0.5) -6px -6px 16px, rgba(209, 205, 199, 0.5) 6px 6px 16px',\n          marginBottom: '20px',\n          transform: hover && 'translateY(-10px)',\n          transition: 'all 0.2s',\n          borderRadius: '5px',\n          color: isDarkMode && '#efeff4',\n          backgroundColor: isDarkMode ? '#3a3a3c' : '#efeeee',\n        }}\n      >\n        <CardContent style={{ marginBottom: '-20px' }}>\n          <Typography\n            gutterBottom\n            style={{\n              opacity: completed && '0.2',\n              transition: 'all 0.2s',\n            }}\n          >\n            {text}\n          </Typography>\n        </CardContent>\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          <span style={{ fontSize: '1.5rem', marginLeft: '8px' }}>{emoji}</span>\n          <IconButton\n            onClick={handleDelete}\n            style={{\n              transition: 'opacity 0.2s',\n              opacity: hover ? 1 : 0,\n              boxShadow: isDarkMode && '-6px -6px 16px rgba(20, 20, 20, 0.5), 6px 6px 16px rgba(46, 50, 56, 0.5)',\n              color: isDarkMode && '#efeff4',\n            }}\n          >\n            <DeleteOutlineOutlinedIcon />\n          </IconButton>\n        </div>\n      </div>\n    </Container>\n  );\n}\nexport default connect()(ArchiveCard);\n","import React from 'react';\nimport TinyFooter from './TinyFooter';\nimport styled from 'styled-components';\nimport styles from './TodoForm.module.css';\nimport ArrowBackOutlinedIcon from '@material-ui/icons/ArrowBackOutlined';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Icon } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport ArchiveCard from './ArchiveCard';\n\nfunction Archive(props) {\n  const { lists, isDarkMode } = props;\n  console.log(isDarkMode);\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        position: 'absolute',\n        width: '100%',\n        backgroundColor: isDarkMode ? '#2c2c2e' : '#eeeeef',\n        overflow: 'auto',\n      }}\n    >\n      <div style={{ padding: '16px 48px', color: '#606060', overflow: 'auto' }}>\n        <div style={{ marginBottom: '16px' }}>\n          <h3\n            style={{\n              color: isDarkMode ? '#e9ecef' : '#303030',\n              borderLeft: '10px solid rgb(217,171,66)',\n              paddingLeft: '16px',\n            }}\n          >\n            Archive 🗂\n          </h3>\n          <NavLink exact to=\"/\">\n            <IconButton\n              style={{\n                boxShadow: isDarkMode && '-6px -6px 16px rgba(0, 0, 0, 0.5), 6px 6px 16px rgba(46, 50, 56, 0.5)',\n                border: isDarkMode && '1px solid #efeff4',\n              }}\n            >\n              <ArrowBackOutlinedIcon style={{ color: isDarkMode && '#e9ecef' }} />\n            </IconButton>\n          </NavLink>\n        </div>\n        {lists.map(\n          (list) =>\n            list.id === '3' &&\n            list.cards\n              .reverse()\n              .map((card) => (\n                <ArchiveCard key={card.id} text={card.text} id={card.id} emoji={card.emoji} isDarkMode={isDarkMode} />\n              ))\n        )}\n      </div>\n      <TinyFooter />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  lists: state.lists,\n});\n\nexport default connect(mapStateToProps)(Archive);\n","import React, { useEffect } from 'react';\nimport TrelloList from './TrelloList';\nimport { connect } from 'react-redux';\nimport TrelloActionButton from './TrelloActionButton';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { sort } from '../actions/cardsActions';\nimport styled from 'styled-components';\nimport TinyFooter from './TinyFooter';\nimport { HashRouter, Route, Switch, Link, Router, withRouter } from 'react-router-dom';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport Archive from './Archive';\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  position: absolute;\n  background-color: ${(props) => (props.isDarkMode ? '#2c2c2e' : '#efeeee')};\n`;\nconst ListContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  background-color: ${(props) => (props.isDarkMode ? '#2c2c2e' : '#efeeee')};\n  height: 90vh;\n`;\n\nconst App = (props) => {\n  useEffect(() => {\n    window.localStorage.setItem('todos', JSON.stringify(props.lists));\n    window.localStorage.setItem('theme', JSON.stringify(props.theme));\n  });\n\n  const onDragEnd = (result) => {\n    const { destination, source, draggableId, type } = result;\n    if (!destination) {\n      return;\n    }\n    props.dispatch(\n      sort(source.droppableId, destination.droppableId, source.index, destination.index, draggableId, type)\n    );\n  };\n\n  const { lists, theme } = props;\n\n  const isDarkMode = theme.darkmode;\n\n  const Routes = withRouter(({ location }) => (\n    <TransitionGroup>\n      <CSSTransition key={location.pathname} classNames=\"fade\" timeout={0}>\n        <Switch location={location}>\n          <Route\n            exact\n            path=\"/\"\n            render={() => (\n              <Container isDarkMode={isDarkMode}>\n                <DragDropContext onDragEnd={onDragEnd}>\n                  <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\n                    {(provided) => (\n                      <ListContainer isDarkMode={isDarkMode} {...provided.droppableProps} ref={provided.innerRef}>\n                        {lists.map(\n                          (list, index) =>\n                            list.id !== '3' && (\n                              <TrelloList\n                                listID={list.id}\n                                key={list.id}\n                                title={list.title}\n                                cards={list.cards}\n                                index={index}\n                                isDarkMode={isDarkMode}\n                              />\n                            )\n                        )}\n                        {provided.placeholder}\n                        {lists.length < 5 && <TrelloActionButton list isDarkMode={isDarkMode} />}\n                      </ListContainer>\n                    )}\n                  </Droppable>\n                </DragDropContext>\n                <TinyFooter />\n              </Container>\n            )}\n          />\n          <Route exact path=\"/archive\" render={() => <Archive isDarkMode={isDarkMode} />} />\n        </Switch>\n      </CSSTransition>\n    </TransitionGroup>\n  ));\n\n  return (\n    <HashRouter>\n      <Routes />\n    </HashRouter>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  lists: state.lists,\n  theme: state.theme,\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { CONSTANTS } from '../actions';\nimport uuid from 'uuid/v4';\n\nconst initialState = [\n  {\n    title: 'Tiny 💡',\n    id: '0',\n    cards: [\n      {\n        id: uuid(),\n        text: 'You can add a tiny todo here.',\n        completed: false,\n      },\n      {\n        id: uuid(),\n        text: 'Send an email to my colleague',\n        completed: true,\n      },\n    ],\n  },\n  {\n    title: 'Task 📝',\n    id: '1',\n    cards: [\n      {\n        id: uuid(),\n        text: 'You can add a task here.',\n        completed: false,\n      },\n      {\n        id: uuid(),\n        text: 'Do homework',\n        completed: true,\n      },\n      {\n        id: uuid(),\n        text: 'Go shopping',\n        completed: true,\n      },\n    ],\n  },\n  {\n    title: 'Goal 🎖',\n    id: '2',\n    cards: [\n      {\n        id: uuid(),\n        text: 'You can add a goal here',\n        completed: false,\n      },\n      {\n        id: uuid(),\n        text: 'Exercise',\n        completed: false,\n      },\n      {\n        id: uuid(),\n        text: 'Eat healthier',\n        completed: false,\n      },\n    ],\n  },\n  {\n    title: 'Archive 🗂',\n    id: '3',\n    cards: [\n      {\n        id: uuid(),\n        text: 'All the completed todos will go to archive after deleted.',\n        completed: false,\n      },\n      {\n        id: uuid(),\n        text: 'Start to use tiny!',\n        completed: false,\n      },\n      {\n        id: uuid(),\n        text: 'You can also add a customized column.',\n        completed: false,\n      },\n    ],\n  },\n];\n\nconst listReducer = (state = JSON.parse(window.localStorage.getItem('todos')) || initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST: {\n      const newList = {\n        title: action.payload,\n        cards: [],\n        id: uuid(),\n      };\n      return [...state, newList];\n    }\n\n    case CONSTANTS.EDIT_LIST: {\n      const { title, listId } = action.payload;\n\n      const newState = state.map((list) => {\n        if (list.id === listId) {\n          return {\n            ...list,\n            title: title,\n          };\n        } else {\n          return list;\n        }\n      });\n\n      return newState;\n    }\n\n    case CONSTANTS.ADD_CARD: {\n      const newCard = {\n        text: action.payload.text,\n        id: uuid(),\n        completed: false,\n      };\n      const newState = state.map((list) => {\n        if (list.id === action.payload.listId) {\n          return {\n            ...list,\n            cards: [...list.cards, newCard],\n          };\n        } else {\n          return list;\n        }\n      });\n      return newState;\n    }\n\n    case CONSTANTS.EDIT_CARD: {\n      const { cardId, text } = action.payload;\n      let newState = [...state];\n      newState.forEach((list) => {\n        list.cards = list.cards.map((card) => {\n          if (card.id === cardId) {\n            return {\n              ...card,\n              text: text,\n            };\n          } else {\n            return card;\n          }\n        });\n      });\n      return newState;\n    }\n\n    case CONSTANTS.DELETE_CARD: {\n      const { cardId } = action.payload;\n      let newState = [...state];\n      let card;\n      let archive = { ...newState.find((list) => list.id === '3') };\n      for (let i = 0; i < newState.length; i++) {\n        for (let j = 0; j < newState[i].cards.length; j++) {\n          let c = { ...newState[i].cards[j] };\n          if (c.id === cardId) {\n            card = c;\n            //delete from archive\n            if (newState[i].id === '3') {\n              archive.cards = archive.cards.filter((card) => card.id !== cardId);\n              newState.forEach((list) => {\n                list.cards = list.cards.filter((card) => card.id !== cardId);\n              });\n              newState = newState.map((list) => {\n                if (list.id === '3') {\n                  return archive;\n                } else return list;\n              });\n              return newState;\n            }\n            //delete from goal\n            else if (newState[i].id === '2') {\n              archive.cards.push({ ...card, emoji: '🎖' });\n              newState.forEach((list) => {\n                list.cards = list.cards.filter((card) => card.id !== cardId);\n              });\n              newState = newState.map((list) => {\n                if (list.id === '3') {\n                  return archive;\n                } else return list;\n              });\n              return newState;\n            }\n            //delete from tiny\n            else if (newState[i].id === '0') {\n              if (card.completed) {\n                archive.cards.push({ ...card, emoji: '💡' });\n                newState.forEach((list) => {\n                  list.cards = list.cards.filter((card) => card.id !== cardId);\n                });\n                newState = newState.map((list) => {\n                  if (list.id === '3') {\n                    return archive;\n                  } else return list;\n                });\n                return newState;\n              } else {\n                newState.forEach((list) => {\n                  list.cards = list.cards.filter((card) => card.id !== cardId);\n                });\n                return newState;\n              }\n            }\n            //delete from task\n            else if (newState[i].id === '1') {\n              if (card.completed) {\n                archive.cards.push({ ...card, emoji: '📝' });\n                newState.forEach((list) => {\n                  list.cards = list.cards.filter((card) => card.id !== cardId);\n                });\n                newState = newState.map((list) => {\n                  if (list.id === '3') {\n                    return archive;\n                  } else return list;\n                });\n                return newState;\n              } else {\n                newState.forEach((list) => {\n                  list.cards = list.cards.filter((card) => card.id !== cardId);\n                });\n                return newState;\n              }\n            }\n            //delete from others\n            else {\n              if (card.completed) {\n                archive.cards.push({ ...card, emoji: '' });\n                newState.forEach((list) => {\n                  list.cards = list.cards.filter((card) => card.id !== cardId);\n                });\n                newState = newState.map((list) => {\n                  if (list.id === '3') {\n                    return archive;\n                  } else return list;\n                });\n                return newState;\n              } else {\n                newState.forEach((list) => {\n                  list.cards = list.cards.filter((card) => card.id !== cardId);\n                });\n                return newState;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    case CONSTANTS.TOGGLE_CARD: {\n      const { cardId } = action.payload;\n      let newState = [...state];\n      newState.forEach((list) => {\n        list.cards = list.cards.map((card) => {\n          if (card.id === cardId) {\n            return {\n              ...card,\n              completed: !card.completed,\n            };\n          } else {\n            return card;\n          }\n        });\n      });\n\n      return newState;\n    }\n\n    case CONSTANTS.DRAG_HAPPENED: {\n      const {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexStart,\n        droppableIndexEnd,\n        draggableId,\n        type,\n      } = action.payload;\n      const newState = [...state];\n\n      if (type === 'list') {\n        const list = newState.splice(droppableIndexStart, 1);\n        newState.splice(droppableIndexEnd, 0, ...list);\n        return newState;\n      }\n\n      //in the same list\n      if (droppableIdStart === droppableIdEnd) {\n        const list = state.find((list) => droppableIdStart === list.id);\n        const card = list.cards.splice(droppableIndexStart, 1);\n        list.cards.splice(droppableIndexEnd, 0, ...card);\n      }\n\n      //in different lists\n      if (droppableIdStart !== droppableIdEnd) {\n        const listStart = state.find((list) => droppableIdStart === list.id);\n        const card = listStart.cards.splice(droppableIndexStart, 1);\n        const listEnd = state.find((list) => droppableIdEnd === list.id);\n        listEnd.cards.splice(droppableIndexEnd, 0, ...card);\n      }\n\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default listReducer;\n","import { CONSTANTS } from '../actions';\nconst initialState = { darkmode: false };\nconst themeReducer = (state = JSON.parse(window.localStorage.getItem('theme')) || initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.TOGGLE_THEME: {\n      return { darkmode: !state.darkmode };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default themeReducer;\n","import { combineReducers } from 'redux';\nimport listReducer from './ListReducer';\nimport themeReducer from './themeReducer';\nexport default combineReducers({\n  lists: listReducer,\n  theme: themeReducer,\n});\n","import {createStore} from \"redux\";\nimport rootReducer from '../reducers';\n\n\nconst store = createStore(rootReducer);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}